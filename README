1. Введение
Скрипт bomparser преобразовывает список компонентов (BOM) в формате csv в перечень элементов в формате LaTeX и предназначен для работы совместно с классом pcbdoc (http://electronix.ru/forum/index.php?showtopic=78249&st=30&p=906217&#entry906217). Основная цель создания этого скрипта - предоставление пользователю более гибкого инструмента создания перечня элементов. 

2. Параметры запуска скрипта
Скрипт использует 3 файла во время своей работы: файл с описанием позиционного обозначения элемента, файл с форматом вывода в графе "Наименование" перечня элементов и, собственно, сам список компонентов (BOM). Пример вызова скрипта из командной строки:

	$bomparser.py -f fmt.txt -d dsc.txt bom.csv

Файлы с описанием элемента и с форматом вывода могут находиться в том каталоге, из которого вызывается скрипт, и могут называться description и format соответственно. В этом случае можно опустить указание данных файлов:

	$bomparser.py bom.csv

3. Формат файла с описанием позиционного обозначения элемента
Данный файл устанавливает соответствие между типом элемента в BOM и его русским названием в единственном и множественном числе. Каждому элементу соответствует строка следующего формата:
	тип_элемента: форма_единственного_числа, форма_множественного_числа
Пример:

	R: Резистор, Резисторы
	L: Индуктивность, Индуктивности

В файле допустимы комментарии, которые должны начинаться с символа #. Строки, не соответствующие вышеприведённому формату, игнорируются при чтении файла.

4. Формат файла вывода
Данный файл содержит правила комбинации полей из BOM для составления результирующей строки элемента в перечне. Каждый элемент описывается в отдельной строке. Строка формата состоит из ключевых слов fieldN, где N - номер поля в BOM. Нумерация полей начинается с единииы. Между ключевыми словами допускается использовать любые другие символы или их комбинации - в этом случае они будут перенесены в перечень элементов в том порядке, в котором они указаны в строке формата. Рассмотрим следующий пример. Пусть в файле BOM содержутся следующие строки:

	Designator,Value,Manufacturer,ManufacturerPartNumber,Quantity,Name,Package,Tolerance,TU/GOST,Type,Power/Voltage,TKC,TKE
	"V1","","International Rectifier","10BQ060","1","","DO-214-AA","","","Диод","","",""
	"C25, C26","33 пФ","","","2","CERCAP","SMD0603","+/-10%","","Конденсатор","50 В","",""

Составим такой формат описания для указанных элементов:

	C: field2 field11 field8, field7
	V: field10, field4, field7, ф. "field3" field9

В результате работы скрипта получим следующие записи в выходном файле:

	\Element{33 пФ 50 В +/-10\%, SMD0603}{\refbox{C25}}{1}
	\Element{33 пФ 50 В +/-10\%, SMD0603}{\refbox{C26}}{1}
	\Element{Диод, 10BQ060, DO-214-AA, ф. <<International Rectifier>> }{\refbox{V1}}{1}

Помимо описания формата вывода в данном файле необходимо указать поля, содержащие позиционные обозначения элементов и их количество. Для этого используются ключевые слова RefDes и Quantity, таким образом для вышеприведённого BOM необходимо добавить следующие строки:

	RefDes: field1
	Quantity: field5

В файле допустимы комментарии, которые должны начинаться с символа #. Строки, не соответствующие вышеприведённому формату, игнорируются при чтении файла.
Те элементы, для которых отсутствует строка формата, не будут включены в перечень элементов. Вы можете указать символ * в качестве типа элемента и тогда данная строка формата будет использоваться для всех элементов с отсутствующей строкой формата. 

Не забудьте исправить элементы основной надписи в выходном файле.
